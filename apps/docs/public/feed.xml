<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<rss version="2.0">
  <channel>
    <title>silverbirder</title>
    <link>https://silverbirder.github.io/blog/</link>
    <description>silverbirder's blog</description>
    <language>ja-JP</language>
    <item>
      <title>Qwikでブログページを刷新して学んだこと</title>
      <link>https://silverbirder.github.io/blog/contents/replace_my_portfolio_by_qwik_v3/</link>
      <description>こんにちは。@silverbirderです。私は、自身のポートフォリオページ兼ブログページを Qwik というフレームワークを使って刷新しました。これで 4 度目の刷新になります。刷新を通して学んだことを書こうと思います。</description>
      <pubDate>Mon, 23 Oct 2023 00:00:00 GMT</pubDate>
      <category>Portfolio</category>
      <category>Artifact</category>
      <category>Qwik</category>
    </item>
    <item>
      <title>ライティングの効率化ツール：AI Ghostwriterの紹介</title>
      <link>https://silverbirder.github.io/blog/contents/writing_efficiency_tool_introducing_ai_ghostwriter/</link>
      <description>最近、ビアードパパの焼きチーズケーキシューにハマっている silverbirder です。文章作成が苦手な私は、AI が文章を代筆する「AI Ghostwriter」という Chrome の拡張機能を開発しました。今回は、この便利なツールの紹介をします。</description>
      <pubDate>Mon, 17 Jul 2023 00:00:00 GMT</pubDate>
      <category>Chrome Extension</category>
      <category>ChatGPT</category>
      <category>AI</category>
      <category>Artifact</category>
    </item>
    <item>
      <title>6ヶ月でTOEICのスコアを285点アップ</title>
      <link>https://silverbirder.github.io/blog/contents/increased_TOEIC_score_by_285_points_in_6_months/</link>
      <description>英語の勉強を始め、TOEICのスコアが6ヶ月で285点もアップしました。この経験を共有し、自分の学習の記録してこの記事を書きます。</description>
      <pubDate>Wed, 05 Jul 2023 00:00:00 GMT</pubDate>
      <category>TOEIC</category>
      <category>English</category>
    </item>
    <item>
      <title>Unleashで始めるフィーチャーフラグ</title>
      <link>https://silverbirder.github.io/blog/contents/unleash_feature_flag/</link>
      <description>フィーチャーフラグ（Feature Flag）をご存知でしょうか？これは新機能のリリース制御やABテストを容易にする強力なツールです。しかし、適切な管理ツールなければ、フィーチャーフラグの管理は容易なことではありません。今回は、そんなフィーチャーフラグの管理を効率化するツール、**Unleash**について解説します。</description>
      <pubDate>Thu, 29 Jun 2023 00:00:00 GMT</pubDate>
      <category>Unleash</category>
      <category>DevOps</category>
      <category>Survey</category>
    </item>
    <item>
      <title>Webフロントエンドにおける網羅的テストパターンガイド</title>
      <link>https://silverbirder.github.io/blog/contents/web_frontend_test_pattern_guide/</link>
      <description>こんにちは、テストが好きなsilverbirderと申します。Webフロントエンドのテストは実施していますか？ユニットテストやビジュアルリグレッションテストは広く知られていると思います。しかし、パフォーマンステストのためのテストコードはありますか？また、カオスエンジニアリングテストやアクセシビリティテストはありますか？</description>
      <pubDate>Fri, 28 Apr 2023 00:00:00 GMT</pubDate>
      <category>Frontend</category>
      <category>Test</category>
      <category>React</category>
      <category>Jest</category>
      <category>Storybook</category>
      <category>Cucumber</category>
      <category>Playwright</category>
      <category>Performance</category>
    </item>
    <item>
      <title>zodのrefineにあるpathにハマった</title>
      <link>https://silverbirder.github.io/blog/contents/zod_refine_path/</link>
      <description>zodのrefineを使っていたのですが、pathの使い方を全く理解できておらず、小一時間ほどハマってしまったことがあったので、備忘録として残しておきます。</description>
      <pubDate>Sat, 07 Jan 2023 00:00:00 GMT</pubDate>
      <category>zod</category>
      <category>Scrap</category>
    </item>
    <item>
      <title>GitHub ActionsとPull Requestを活用した、同期の自動化</title>
      <link>https://silverbirder.github.io/blog/contents/automated_synchronisation_using_github_actions_and_pull_requests/</link>
      <description>あけまして、おめでとうございます。神社のおみくじで、人生はじめて大吉を引きました、silverbirder です。普段の業務で、FigmaのデザイントークンやAPIのスキーマファイル、i18nのメッセージファイルなどを、フロントエンドへ同期するコミュニケーションが不毛に感じています。そこで、GitHub ActionsとPull Requestを活用して、同期コミュニケーションを削減する仕組みを紹介します。</description>
      <pubDate>Tue, 03 Jan 2023 00:00:00 GMT</pubDate>
      <category>GitHub Actions</category>
      <category>DevOps</category>
      <category>GitHub</category>
      <category>Survey</category>
    </item>
    <item>
      <title>2022年の振り返り。転職と妊活</title>
      <link>https://silverbirder.github.io/blog/contents/2022_furikaeri/</link>
      <description>2022 年の終わりに近づきました。今年の振り返りをしようと思います。これは、自分のために書いていくので、文章の構造化とか不適当にやります。</description>
      <pubDate>Sat, 03 Dec 2022 00:00:00 GMT</pubDate>
      <category>Looking Back</category>
    </item>
    <item>
      <title>「マイクロフロントエンド」を読みました</title>
      <link>https://silverbirder.github.io/blog/contents/review_of_micro-frontends_book/</link>
      <description>DAZN の Luca Mezzalira さんが書かれたマイクロフロントエンドを読みました。簡単な書籍レビューを残しておこうかなと思います。</description>
      <pubDate>Sun, 13 Nov 2022 00:00:00 GMT</pubDate>
      <category>Micro Frontends</category>
      <category>Review</category>
    </item>
    <item>
      <title>ObsidianでiPhoneからGit Commitする</title>
      <link>https://silverbirder.github.io/blog/contents/obsidian-git-muti-device/</link>
      <description>WikiWikiWeb というコンセプトが好きで、そのコンセプトが含まれている Obsidian や Scrapbox が好きです。Obsidian には、obsidian-gitという Git 連携のプラグインがあります。こちらには、デスクトップだけでなく、モバイルからでも Git Commit できるようになりました。</description>
      <pubDate>Tue, 18 Oct 2022 00:00:00 GMT</pubDate>
      <category>Obsidian</category>
      <category>Git</category>
      <category>iPhone</category>
      <category>Scrap</category>
    </item>
    <item>
      <title>GraphQL Guildのエコシステムって便利だね</title>
      <link>https://silverbirder.github.io/blog/contents/graphql_guild_ecosystem_is_useful/</link>
      <description>GraphQL Guild ってご存知ですか？GraphQL 界隈だと、Code Generator が有名と思いますが</description>
      <pubDate>Sat, 15 Oct 2022 00:00:00 GMT</pubDate>
      <category>GraphQL</category>
      <category>Survey</category>
    </item>
    <item>
      <title>クローリングをシュッとやるのに、Crawleeが便利だった</title>
      <link>https://silverbirder.github.io/blog/contents/crawlee-was-useful-for-crawling/</link>
      <description>スクレイピングしたいときって、あると思います。Crawlee という OSS が便利だったので、共有します。</description>
      <pubDate>Wed, 14 Sep 2022 00:00:00 GMT</pubDate>
      <category>Crawlee</category>
      <category>Crawler</category>
      <category>Survey</category>
    </item>
    <item>
      <title>turborepo-remote-cache でキャッシュサーバをセルフホストした</title>
      <link>https://silverbirder.github.io/blog/contents/self-hosted_cache_server_with_turborepo-remote-cache/</link>
      <description>vercel 製の turborepo という ビルドシステムが爆速なモノレポツールがあります。爆速にする機能の 1 つに、リモートキャッシュというものがあります。この機能は vercel のキャッシュサーバを使うのですが、キャッシュサーバをセルフホストする方法もあります。今回は、それを紹介します。</description>
      <pubDate>Sun, 11 Sep 2022 00:00:00 GMT</pubDate>
      <category>Turborepo</category>
      <category>Monorepo</category>
      <category>Vercel</category>
      <category>Survey</category>
    </item>
    <item>
      <title>ERNIE-ViLG を Google Colaboratory で動かしてみた</title>
      <link>https://silverbirder.github.io/blog/contents/ernie_vilg_demo/</link>
      <description>ERNIE-ViLG というのが、"二次元キャラ" に強いという記事を目にしました。実際に使ってみようと、次のページで試したんですが、レスポンスがイマイチでした。そこで、次の記事を参考にして、ERNIE-ViLG を Google Colaboratory で動かすようにしました。</description>
      <pubDate>Sat, 03 Sep 2022 00:00:00 GMT</pubDate>
      <category>ERNIE-ViLG</category>
      <category>AI</category>
      <category>Google Colaboratory</category>
      <category>Scrap</category>
    </item>
    <item>
      <title>Stable Diffusion API 開発</title>
      <link>https://silverbirder.github.io/blog/contents/using_stability_ai_API/</link>
      <description>Stable Diffusion は、文章を渡すと画像を生成してくれる AI で OSS です。これを自前で動かそうとすると、GPU が必要になります。</description>
      <pubDate>Sat, 03 Sep 2022 00:00:00 GMT</pubDate>
      <category>Stable Diffusion</category>
      <category>API</category>
      <category>AI</category>
      <category>Artifact</category>
    </item>
    <item>
      <title>Midjourney, StableDiffusion で役立つPrompt フレーズ集</title>
      <link>https://silverbirder.github.io/blog/contents/prompt_phrases_useful_in_Midjourney_StableDiffusion/</link>
      <description>Midjourney や StableDiffusion を使っていると、どういうフレーズを使えばよいかわからなくなります。そこで、フレーズ集を作って、Prompt で役立てたいなと思っています。</description>
      <pubDate>Sun, 28 Aug 2022 00:00:00 GMT</pubDate>
      <category>Midjourney</category>
      <category>Stable Diffusion</category>
      <category>AI</category>
      <category>Scrap</category>
    </item>
    <item>
      <title>CI/CDのDaggerで、GithubActionsとCircleCIにシュッと連携してみた</title>
      <link>https://silverbirder.github.io/blog/contents/try_dagger/</link>
      <description>前々から気になっていた、CI/CD の非ベンダーロックインな Dagger というツールを試してみました。本記事では、試した内容について共有しようと思います。</description>
      <pubDate>Tue, 23 Aug 2022 00:00:00 GMT</pubDate>
      <category>Dagger</category>
      <category>CI</category>
      <category>CD</category>
      <category>GitHub Actions</category>
      <category>CircleCI</category>
      <category>DevOps</category>
      <category>Scrap</category>
    </item>
    <item>
      <title>connect-webやってみた</title>
      <link>https://silverbirder.github.io/blog/contents/try_connect_web/</link>
      <description>connect-web の記事が、はてブでトレンドになっていました。気になったので、試してみました。サンプルコードは、次のリポジトリに置いています。</description>
      <pubDate>Sat, 20 Aug 2022 00:00:00 GMT</pubDate>
      <category>gRPC</category>
      <category>React</category>
      <category>Scrap</category>
    </item>
    <item>
      <title>urqlでデータ変換(transform)してみた</title>
      <link>https://silverbirder.github.io/blog/contents/urql_transform_exchange/</link>
      <description>GraphQL クライアントを使っていると、データを取得後に変換処理がしたくなります。GraphQL クライアントの urql で、データ変換するのに、exchanges が使えそうだったので、それを共有します。</description>
      <pubDate>Wed, 10 Aug 2022 00:00:00 GMT</pubDate>
      <category>GraphQL</category>
      <category>urql</category>
      <category>React</category>
      <category>Survey</category>
    </item>
    <item>
      <title>GraphQLの歴史</title>
      <link>https://silverbirder.github.io/blog/contents/a_brief_history_of_graphql/</link>
      <description>GraphQL を業務で使い始めました。いつものように、GraphQL の歴史が気になったので、調べてみました。</description>
      <pubDate>Sat, 30 Jul 2022 00:00:00 GMT</pubDate>
      <category>GraphQL</category>
      <category>History</category>
    </item>
    <item>
      <title>JavaScriptのdebuggerを使ってデバッグしよう (Browser/Node.js/Jest)</title>
      <link>https://silverbirder.github.io/blog/contents/Lets_debug_with_JavaScript_debugger/</link>
      <description>JavaScript の標準機能 `debugger` を使って、デバッグをしましょう。標準機能なので、React などのライブラリでも使えます。</description>
      <pubDate>Sat, 09 Jul 2022 00:00:00 GMT</pubDate>
      <category>JavaScript</category>
      <category>Debugger</category>
    </item>
    <item>
      <title>ブラウザのレイアウトとペイントを知る</title>
      <link>https://silverbirder.github.io/blog/contents/know_your_browser_layout_and_paint/</link>
      <description>ブラウザのレンダリングエンジンにおけるレイアウトやペイントについて気になったので、調べました。その内容をまとめます。レンダリングエンジンは、Chrome の Blink を題材とします。</description>
      <pubDate>Sun, 03 Jul 2022 00:00:00 GMT</pubDate>
      <category>Browser</category>
      <category>Layout</category>
      <category>Paint</category>
    </item>
    <item>
      <title>この体はポンデリングで出来ている</title>
      <link>https://silverbirder.github.io/blog/contents/this_body_is_made_of_ponderings/</link>
      <description>ミスタードーナツ、それは至高のドーナツを生み出すお店。私とミスタードーナツの出会い、別れ、そして再開について、話します。</description>
      <pubDate>Thu, 30 Jun 2022 00:00:00 GMT</pubDate>
      <category>Mister Donut</category>
    </item>
    <item>
      <title>学生時代に経験したアルバイト</title>
      <link>https://silverbirder.github.io/blog/contents/part_time_jobs_I_had_as_a_student/</link>
      <description>学生時代、いろいろアルバイトをしました。忘れないように記録として残そうと思います。</description>
      <pubDate>Wed, 29 Jun 2022 00:00:00 GMT</pubDate>
      <category>Student</category>
      <category>Part Time</category>
    </item>
    <item>
      <title>［覚書］Reactを業務で使い始めて知ったこと</title>
      <link>https://silverbirder.github.io/blog/contents/what_I_learned_when_I_started_using_React_in_my_work/</link>
      <description>私は、これまでプライベートでしか React を使っていませんでした。最近、業務で React を使う機会が増えたので、学んだことを残そうと思います。</description>
      <pubDate>Sat, 25 Jun 2022 00:00:00 GMT</pubDate>
      <category>React</category>
      <category>Learn</category>
      <category>History</category>
    </item>
    <item>
      <title>Micro Frontendsで組成するフラグメントをWeb Componentsで定義してModule Federationで共有する</title>
      <link>https://silverbirder.github.io/blog/contents/fragments_to_be_composed_in_Micro_Frontends_are_defined_in_Web_Components_and_shared_in_Module_Federation/</link>
      <description>Micro Frontends(以降、MFE)で組成するフラグメントを Web Components で定義して Module Federation で共有する方法を、ざっくり紹介します。</description>
      <pubDate>Sat, 28 May 2022 00:00:00 GMT</pubDate>
      <category>Web Components</category>
      <category>Module Federation</category>
      <category>Micro Frontends</category>
      <category>Artifact</category>
    </item>
    <item>
      <title>iframeでTwitterの埋め込みコンテンツの描画後に、画面表示する方法</title>
      <link>https://silverbirder.github.io/blog/contents/how_to_display_embedded_twitter_content_after_rendering_on_iframe/</link>
      <description>結論 `iframe.contentWindow` から `twttr` オブジェクトを見つけて、`event.bind("rendered", () =&gt; {})` の第二引数に、表示処理を書くことです。 背景 `https://twitter.com/openwc/status/1427617679427440643` のような URL から、埋め込みコンテンツをブログサイトなどに表示したいです。 `https://publish.twitter.com/oembed?url=${URL}` のレスポンスの中の html が、埋め込みコンテンツになります。これを iframe の srcdoc に設定することで、埋め込みコンテンツを表示することができます。</description>
      <pubDate>Sun, 22 May 2022 00:00:00 GMT</pubDate>
      <category>Twitter</category>
      <category>Survey</category>
      <category>iframe</category>
    </item>
    <item>
      <title>OEmbedとOGPのWebComponentsを作ったので、自分のブログサイトに使う</title>
      <link>https://silverbirder.github.io/blog/contents/publish_my_web_components/</link>
      <description>次の 2 つの Web Components を作成しました。背景 自分のブログで、埋め込みコンテンツを表示したいな〜って思ってました。iframely というサービスを使っていましたが、自前で作りたいなというモチベーションが生まれました。そこで、OEmbed と OGP の表示ができるように、Web Components を独自に作成しました。</description>
      <pubDate>Mon, 11 Apr 2022 00:00:00 GMT</pubDate>
      <category>Web Components</category>
      <category>OEmbed</category>
      <category>OGP</category>
      <category>Artifact</category>
    </item>
    <item>
      <title>WebComponentsでoEmbedのコンポーネントを開発して、学んだこと</title>
      <link>https://silverbirder.github.io/blog/contents/what_i_learned_from_developing_o_embed_web_components/</link>
      <description>WebComponents で、oEmbed コンポーネントを開発し、公開しました。開発していく上で、学んだことを列挙しようと思います。</description>
      <pubDate>Fri, 25 Mar 2022 00:00:00 GMT</pubDate>
      <category>Web Components</category>
      <category>OEmbed</category>
      <category>Learn</category>
    </item>
    <item>
      <title>Ruby on Railsを業務で使って思ったこと</title>
      <link>https://silverbirder.github.io/blog/contents/started_using_ruby_on_rails_at_work./</link>
      <description>2022 年 1 月より新しい職場で、はじめて Ruby on Rails(以下、Rails)を使うようになりました。これまで、PHP の CakePHP、Node.js の Express、Python の Flask の経験がある私ですが、Rails に、なかなか慣れない苦労がありました。ゆるく、言語化しようと思います。ちなみに、Ruby もはじめて使いました。</description>
      <pubDate>Thu, 24 Mar 2022 00:00:00 GMT</pubDate>
      <category>Ruby on Rails</category>
      <category>Learn</category>
      <category>Scrap</category>
    </item>
    <item>
      <title>Reactを学ぶ前に歴史を知る</title>
      <link>https://silverbirder.github.io/blog/contents/know_the_history_before_learning_React/</link>
      <description>これは何？ Reactは、どうして生まれたのか歴史について簡単に紹介します。(ちょっと調べただけ) 背景 最近、Reactを学び始めました。その過程で、どうしてReactって学ぶべきなのか、どういう特徴があるのか気になった次第です。</description>
      <pubDate>Fri, 11 Mar 2022 00:00:00 GMT</pubDate>
      <category>React</category>
      <category>Learn</category>
      <category>History</category>
    </item>
    <item>
      <title>Web Componentsの良さ</title>
      <link>https://silverbirder.github.io/blog/contents/the_goodness_of_web_components./</link>
      <description>Web Components を人にお勧めしたいんです。メリット・デメリットをかんたんにまとめたいと思います。Web Components is 何https://www.webcomponents.org/specs より引用します。</description>
      <pubDate>Tue, 01 Mar 2022 00:00:00 GMT</pubDate>
      <category>Web Components</category>
      <category>Goodness</category>
    </item>
    <item>
      <title>オミクロン株に感染したので、分かったことを書く</title>
      <link>https://silverbirder.github.io/blog/contents/covid-19-omicron-knowledge/</link>
      <description>2022年1月24日、オミクロン株に感染しました。知らないことが多かったので、分かったことを書こうと思います。※ あくまで、私が経験した内容であり、一般的な内容かどうかは、知りません。</description>
      <pubDate>Fri, 28 Jan 2022 00:00:00 GMT</pubDate>
      <category>COVID-19</category>
      <category>Omicron</category>
      <category>Learn</category>
    </item>
    <item>
      <title>Chrome拡張機能(Manifest V3)の開発で知ったこと</title>
      <link>https://silverbirder.github.io/blog/contents/chrome_extension_development_feedback/</link>
      <description>皆さん、Chrome拡張機能をご存知ですか？Chrome拡張機能は、Chromeブラウザをカスタマイズするための機能です。Chrome拡張機能の概要について詳しく知りたい方は、What are extensions? - Chrome Developersをご覧ください。</description>
      <pubDate>Sun, 16 Jan 2022 00:00:00 GMT</pubDate>
      <category>Chrome Extension</category>
      <category>Manifest V3</category>
      <category>Artifact</category>
    </item>
    <item>
      <title>Markdownで執筆するなら、WebComponentsが使えるSSG、Rocketがオススメ！</title>
      <link>https://silverbirder.github.io/blog/contents/intro_rocket/</link>
      <description>Markdownでブログやドキュメントを書いていますか？執筆活動に集中したいのに、Markdownだけだとかゆいところに手が届かないもどかしさ、感じたことありませんか？そんな方に、MarkdownとWebComponentsがシームレスに統合できる静的サイトジェネレータ(以降、SSGと呼ぶ)、Rocketをおすすめします。</description>
      <pubDate>Fri, 24 Dec 2021 00:00:00 GMT</pubDate>
      <category>Markdown</category>
      <category>Rocket</category>
      <category>Portfolio</category>
      <category>SSG</category>
      <category>Web Components</category>
      <category>Artifact</category>
    </item>
    <item>
      <title>silverbirderのポートフォリオページ刷新(v2)</title>
      <link>https://silverbirder.github.io/blog/contents/replace_my_portfolio_v2/</link>
      <description>この度、私のポートフォリオページを刷新致しました。本記事では、刷新することになった動機から、刷新内容、今後について紹介したいと思います。</description>
      <pubDate>Thu, 23 Dec 2021 00:00:00 GMT</pubDate>
      <category>Portfolio</category>
      <category>Artifact</category>
    </item>
    <item>
      <title>2021年の振り返り。</title>
      <link>https://silverbirder.github.io/blog/contents/2021_furikaeri/</link>
      <description>2021年も、もう残りわずかになりました。今年も、振り返りをブログに残そうと思います。技術 フルスタックエンジニアリング 今年は、業務でフルスタックな開発を多く経験できました。</description>
      <pubDate>Tue, 21 Dec 2021 00:00:00 GMT</pubDate>
      <category>Looking Back</category>
    </item>
    <item>
      <title>Googleアカウント画像を返却するだけのAPIを作った</title>
      <link>https://silverbirder.github.io/blog/contents/intro_google_account_photo_api/</link>
      <description>みなさん、ご自身のプロフィール画像ってどう管理していますか？例えば、zennのプロフィール画像って、更新していますか？ 私は、プロフィール画像の更新は面倒なので、放置することが多いです。(GravatarみたいなSaaSが使えたら良いのに...)</description>
      <pubDate>Mon, 20 Dec 2021 00:00:00 GMT</pubDate>
      <category>Google</category>
      <category>API</category>
      <category>Artifact</category>
    </item>
    <item>
      <title>BigQueryだけで完結するモック可能なユニットテスト手法</title>
      <link>https://silverbirder.github.io/blog/contents/a_mockable_unit_testing_method_that_can_be_completed_only_with_big_query/</link>
      <description>BigQuery、皆さん使っていますか？ 私は、業務でBigQueryを使ったデータ構築をしています。品質担保のため、BigQueryのSQLに対してテストをしたいと考えています。本記事では、BigQueryだけで完結し、かつ、Mockデータを差し替え可能なユニットテスト手法について、紹介します。</description>
      <pubDate>Fri, 26 Nov 2021 00:00:00 GMT</pubDate>
      <category>HTML</category>
      <category>BigQuery</category>
      <category>Mock</category>
      <category>Test</category>
      <category>Survey</category>
    </item>
    <item>
      <title>カジュアル面談を10社受けた感想</title>
      <link>https://silverbirder.github.io/blog/contents/my_feedback_after_taking_casual_interviews_with_10_companies_in_2_months/</link>
      <description>100日後に退職する47歳さんのお話が、Twitter上で話題ですね。その投稿が続いている裏で、私は、転職活動をしていました。その活動内容や感想について、かんたんにまとめておきたいと思います。</description>
      <pubDate>Fri, 12 Nov 2021 00:00:00 GMT</pubDate>
      <category>Casual Interview</category>
      <category>Review</category>
    </item>
    <item>
      <title>LLVM入門 - javascriptをLLVM(Rust:inkwell)でJITコンパイルするまで</title>
      <link>https://silverbirder.github.io/blog/contents/intro_to_LLVM-JIT_compilation_of_javascript_with_LLVM_Rust_inkwell/</link>
      <description>コンパイラ基盤であるLLVMについて、全く知識がない私が、javascriptソースコードをパースしLLVMでコンパイルできるようになりました。LLVMの記事は数多くありますが、初心者向けの記事が少なく感じたため、本記事では、できる限り分かりやすくLLVMについて紹介できる記事を書こうと思います。ソースコードは、こちらに置いています。</description>
      <pubDate>Sat, 04 Sep 2021 00:00:00 GMT</pubDate>
      <category>LLVM</category>
      <category>Javascript</category>
      <category>Rust</category>
      <category>Inkwell</category>
      <category>JIT</category>
      <category>Survey</category>
    </item>
    <item>
      <title>TikTokスクレイプ基盤をGCP上で構築してハマったこと</title>
      <link>https://silverbirder.github.io/blog/contents/learn_point_from_building_tiktok_scrape_platform_on_gcp/</link>
      <description>TikTokへスクレイプするバッチをGCP上で構築しました。GCP構築のシステム設計話と、その構築時に、ハマったことを共有します。</description>
      <pubDate>Sat, 28 Aug 2021 00:00:00 GMT</pubDate>
      <category>TikTok</category>
      <category>GCP</category>
      <category>Learn</category>
      <category>Artifact</category>
      <category>Scraping</category>
    </item>
    <item>
      <title>ブラウザの仕組みを学ぶ</title>
      <link>https://silverbirder.github.io/blog/contents/learning_browser_engine/</link>
      <description>Webフロントエンジニアたるもの、ブラウザの仕組みに興味を持つのは自然の摂理です。本記事では、私がブラウザの仕組みを学んでいく過程を備忘録として残します。</description>
      <pubDate>Mon, 24 May 2021 00:00:00 GMT</pubDate>
      <category>Browser</category>
      <category>Learn</category>
    </item>
    <item>
      <title>リモートワークになってから『気軽にすぐ聞く』ことが難しくなった</title>
      <link>https://silverbirder.github.io/blog/contents/good_and_bad_in_offline_and_online/</link>
      <description>リモートワークが普及しつつある今、オンラインでの仕事に慣れているエンジニアも多いのではないでしょうか。私も、そのエンジニアの一人であり、約1年はリモートワークしています。そんな中、久々に会社へ出社すると、気軽に話しかける楽さ を実感しました。この体験について、深堀りしたいと思います。</description>
      <pubDate>Wed, 10 Mar 2021 00:00:00 GMT</pubDate>
      <category>Remote Working</category>
      <category>Learn</category>
      <category>Scrap</category>
    </item>
    <item>
      <title>クライアントサイド(ES Module)でMicro Frontends</title>
      <link>https://silverbirder.github.io/blog/contents/client_microfrontends/</link>
      <description>2021年、あけましておめでとうございます。本年も宜しくおねがいします。最近、体重が増えてしまったため、有酸素運動を頑張っています。本記事は、昨年の冬あたりから検証していた クライアントサイド統合でのMicro Frontendsについて話そうと思います。検証したソースコードは、次のリポジトリにあります。</description>
      <pubDate>Sat, 16 Jan 2021 00:00:00 GMT</pubDate>
      <category>Micro Frontends</category>
      <category>Client Side</category>
      <category>Es Module</category>
      <category>Artifact</category>
    </item>
    <item>
      <title>2020年の振り返り。結婚と継続力</title>
      <link>https://silverbirder.github.io/blog/contents/2020_furikaeri/</link>
      <description>2020年も、もう残りわずかになりました。今年の振り返りをはじめてブログに残そうと思います。</description>
      <pubDate>Wed, 30 Dec 2020 00:00:00 GMT</pubDate>
      <category>Looking Back</category>
    </item>
    <item>
      <title>コロナ禍におけるエンジニアのためのCloud IDE</title>
      <link>https://silverbirder.github.io/blog/contents/cloud_ide/</link>
      <description>2020年3月頃からコロナが流行りだし、もう12月になります。働き方が大きく変わり、リモートワークが当たり前の時代となりました。エンジニアの働き方も同様に変わりました。そこで、今回はCloud IDEというものを紹介しようと思います。</description>
      <pubDate>Sat, 12 Dec 2020 00:00:00 GMT</pubDate>
      <category>Cloud IDE</category>
      <category>Engineer</category>
      <category>COVID-19</category>
    </item>
    <item>
      <title>TypescriptでArchUnitしてみた</title>
      <link>https://silverbirder.github.io/blog/contents/arch-unit/</link>
      <description>ArchUnitをというものを最近知りました。依存関係のテストができるそうです。さっそく試してみたいと思いますので、その備忘録として残しておきます。</description>
      <pubDate>Sat, 28 Nov 2020 00:00:00 GMT</pubDate>
      <category>Typescript</category>
      <category>Unit Test</category>
      <category>Arch Unit</category>
      <category>Test</category>
      <category>Clean Architecture</category>
    </item>
    <item>
      <title>［覚書］ Micro Frontends</title>
      <link>https://silverbirder.github.io/blog/contents/mfe/</link>
      <description>Micro Frontends とは?皆さん、**Micro Fronends**(以下、MFE)をご存知でしょうか。説明をざっくりしますと、Microservicesの考え方をフロントエンドまで拡張した考え方です。Microservicesは、バックエンド側で適用される事例をよく耳にしますが、フロントエンドでの適用事例は、あまり聞いたことがありません。</description>
      <pubDate>Thu, 19 Nov 2020 00:00:00 GMT</pubDate>
      <category>Micro Frontends</category>
      <category>Survey</category>
    </item>
    <item>
      <title>Cloudflare Workers (Edge Worker) で Micro Frontends</title>
      <link>https://silverbirder.github.io/blog/contents/cloudflare_workers_mfe/</link>
      <description>今回、またMicro Frontendsの構築を試みようと思います。構築パターンの内、サーバーサイド統合パターン、特にエッジサイド統合を試しました。その内容を紹介します。サンプルコードは、下記に残しています。</description>
      <pubDate>Sun, 15 Nov 2020 00:00:00 GMT</pubDate>
      <category>Cloudflare Workers</category>
      <category>Edge Worker</category>
      <category>Micro Frontends</category>
    </item>
    <item>
      <title>20代後半エンジニアである私がこれから学ぶべきこと</title>
      <link>https://silverbirder.github.io/blog/contents/20_study_enginner/</link>
      <description>私は、現在26歳のWebエンジニアです。これまでの技術に対する学び方と、これからの技術に対する学び方について、少し考えたいと思っています。</description>
      <pubDate>Thu, 29 Oct 2020 00:00:00 GMT</pubDate>
      <category>Learn</category>
      <category>Career</category>
    </item>
    <item>
      <title>技術におけるアンテナの張り方 (巨人の肩に乗れ!)</title>
      <link>https://silverbirder.github.io/blog/contents/tech_antena/</link>
      <description>エンジニアは、普段様々なところから技術をキャッチアップすると思います。それは、SNSであったり、ブログであったり、動画であったりです。そこで、私の技術をキャッチアップするためのアンテナの張り方について、紹介しようと思います。</description>
      <pubDate>Fri, 16 Oct 2020 00:00:00 GMT</pubDate>
      <category>Antenna</category>
      <category>Technology</category>
      <category>Scrap</category>
    </item>
    <item>
      <title>Micro Frontends を調べたすべて</title>
      <link>https://silverbirder.github.io/blog/contents/think_micro_frontends/</link>
      <description>Micro Frontendsに関わる記事を100件以上読みました(参考記事に記載しています)。そこから得たMicro Frontendsについてこの投稿に記録します。また、調査メモについて、次のリポジトリに残しています。</description>
      <pubDate>Wed, 07 Oct 2020 00:00:00 GMT</pubDate>
      <category>Micro Frontends</category>
      <category>Learn</category>
    </item>
    <item>
      <title>Zalando tailor で Micro Frontends with ( LitElement  &amp; etcetera)</title>
      <link>https://silverbirder.github.io/blog/contents/tailor/</link>
      <description>Zalando社が開発したTailorを使って、サンプルWebアプリをMicro Frontendsで構築してみました。Tailorはサーバーサイドで統合するアーキテクチャです。クライアントサイドは、Web Componentsで作られているLit Elementを使って統合しました。どういった内容か、ここに投稿しようと思います。</description>
      <pubDate>Sun, 04 Oct 2020 00:00:00 GMT</pubDate>
      <category>Zalando Tailor</category>
      <category>Micro Frontends</category>
      <category>Lit Element</category>
      <category>Artifact</category>
    </item>
    <item>
      <title>Ara-Framework で Micro Frontends with SSR</title>
      <link>https://silverbirder.github.io/blog/contents/ara-framework/</link>
      <description>みなさん、こんにちは。silverbirder です。、Micro Frontends があります。今、Ara-Frameworkというフレームワークを使った Micro Frontends のアプローチ方法を学んでいます。</description>
      <pubDate>Sun, 23 Aug 2020 00:00:00 GMT</pubDate>
      <category>Ara Framework</category>
      <category>Micro Frontends</category>
      <category>SSR</category>
      <category>Artifact</category>
    </item>
    <item>
      <title>Apache Beam + Kotlin 開発 実践入門</title>
      <link>https://silverbirder.github.io/blog/contents/apache-beam-kotlin/</link>
      <description>どうも、こんにちは。Re:ゼロ2期 始まりましたね、 @silverbirderです。最近、仕事の関係上、Apache Beam + Kotlin を使うことになりました。それらの技術が一切知らなかったので、この記事に学んだことを書いていきます。</description>
      <pubDate>Fri, 10 Jul 2020 00:00:00 GMT</pubDate>
      <category>Apache Beam</category>
      <category>Kotlin</category>
      <category>Beginner</category>
      <category>Tutorial</category>
    </item>
    <item>
      <title>Webアプリのテスト観点を調べてまとめてみた (25選)</title>
      <link>https://silverbirder.github.io/blog/contents/testing_pattern/</link>
      <description>最近、Property Based Test という言葉を知りました。他にどういうテストの種類があるのか気になったので、調べてみました。本記事は、テストの種類を列挙します。※ 使用する技術は、私の都合上、node.jsで選んでいます。</description>
      <pubDate>Thu, 18 Jun 2020 00:00:00 GMT</pubDate>
      <category>Web</category>
      <category>Test</category>
    </item>
    <item>
      <title>ZoomのMeetingを自動生成するGASライブラリ zoom-meeting-creator を作った</title>
      <link>https://silverbirder.github.io/blog/contents/zoom-meeting-creator/</link>
      <description>みなさん、Zoom使っていますか？ ZoomのMeetingを自動生成するGASライブラリを公開しましたので、そのきっかけと使い方について紹介しようと思います。</description>
      <pubDate>Sat, 06 Jun 2020 00:00:00 GMT</pubDate>
      <category>Artifact</category>
      <category>Google Apps Script</category>
      <category>Zoom</category>
      <category>Slack</category>
    </item>
    <item>
      <title>アカウント画像一括更新ツールを作ったので、紹介と学びについて</title>
      <link>https://silverbirder.github.io/blog/contents/puppeteer_account_manager/</link>
      <description>GoogleやGithubなど、様々なサービスのプロフィール情報(画像, etc)を一括更新するツール、puppeteer-account-manager を開発しました。開発の目的や、開発から得た知見を紹介します。</description>
      <pubDate>Thu, 04 Jun 2020 00:00:00 GMT</pubDate>
      <category>Artifact</category>
      <category>Learn</category>
    </item>
    <item>
      <title>Micro Frontends を学んだすべて</title>
      <link>https://silverbirder.github.io/blog/contents/microfrontends/</link>
      <description>Micro FrontendsというWebフロントエンドアーキテクチャがあります。このアーキテクチャを知るために、書籍を読み、簡単なサンプルWebアプリを開発しました。そこから学んだことをすべて議事録として残したいと思います。</description>
      <pubDate>Mon, 04 May 2020 00:00:00 GMT</pubDate>
      <category>Micro Frontends</category>
      <category>Learn</category>
    </item>
    <item>
      <title>TwitterにあるLinkを収集するツール Cotlin で、世界中のプレゼンテーション資料を知ろう</title>
      <link>https://silverbirder.github.io/blog/contents/twitter_cotlin/</link>
      <description>Twitterに投稿されているLinkを収集するツール Cotlin を作りました。Collect links in tweet から、Cotlinという名前にしました。Androidのアレに似ています。</description>
      <pubDate>Sun, 15 Mar 2020 00:00:00 GMT</pubDate>
      <category>Artifact</category>
      <category>Learn</category>
      <category>Twitter</category>
      <category>Google Apps Script</category>
      <category>Clasp</category>
    </item>
    <item>
      <title>Mac で バ美肉 りたい！  (Zoom + Gachikoe + 3Tene or Reality)</title>
      <link>https://silverbirder.github.io/blog/contents/mac_babiniku/</link>
      <description>きっかけ みなさん、リモートワーク（テレワーク）してますか？Hangouts MeetやZoomといったビデオ会議ツールを使う機会が増えたと思います。そんな中、次の記事が流行りました。 バ美肉（バびにく）とは、バーチャル美少女受肉またはバーチャル美少女セルフ受肉の略語</description>
      <pubDate>Sun, 08 Mar 2020 00:00:00 GMT</pubDate>
      <category>Mac</category>
      <category>Virtual Girl</category>
      <category>Zoom</category>
      <category>Gachikoe</category>
      <category>3Tene</category>
      <category>Reality</category>
      <category>Survey</category>
    </item>
    <item>
      <title>Google Apps Script で FetchAllとRedirctURL の組み合わせは悪い</title>
      <link>https://silverbirder.github.io/blog/contents/gas_fetchall_redirect/</link>
      <description>Google Apps Script (以下、GAS)で、困ったことがあったので備忘録として残しておこうと思います。</description>
      <pubDate>Mon, 24 Feb 2020 00:00:00 GMT</pubDate>
      <category>Google Apps Script</category>
      <category>Learn</category>
    </item>
    <item>
      <title>GMailをGCalendarに登録するサービス rMinc を作ってみた</title>
      <link>https://silverbirder.github.io/blog/contents/rminc/</link>
      <description>ターゲットユーザー * GMailとGCalendarを使っている人 メールを開くって面倒じゃないですか？ 例えば、次のようなメールを受信していたとします。* アマゾンで商品を購入した際、お届け予定日が記載されたメール * 映画館(TOHOシネマ)でネット予約した際、上映日が記載されたメール * ホテルをネット予約した際、宿泊日が記載されたメール</description>
      <pubDate>Mon, 17 Feb 2020 00:00:00 GMT</pubDate>
      <category>Artifact</category>
      <category>Learn</category>
      <category>Google Apps Script</category>
      <category>GCalendar</category>
      <category>GMail</category>
      <category>rMinc</category>
    </item>
    <item>
      <title>1コマ漫画検索サービスTiqav2 (Algolia + Cloudinary + Google Cloud Vision API) 作ってみた</title>
      <link>https://silverbirder.github.io/blog/contents/tiqav2_release/</link>
      <description>画像で会話って楽しい 皆さん、チャットツールでコミュニケーションするとき、絵文字や画像って使ってますか？僕はよく使ってます。人とコミュニケーションするのに、文字だけだと堅苦しいイメージですよね。例えば、『OKです、それで先に進めて下さい。』というフレーズだけだと、相手がどのような感情なのか読み取りにくいです。</description>
      <pubDate>Sat, 08 Feb 2020 00:00:00 GMT</pubDate>
      <category>Artifact</category>
      <category>Learn</category>
      <category>Algolia</category>
      <category>Cloudinary</category>
    </item>
    <item>
      <title>Google Apps Script でも テスト がしたい！ (Clasp + Typescript + Jest)</title>
      <link>https://silverbirder.github.io/blog/contents/thing_the_gas_testing_code/</link>
      <description>Google Apps Script(以下,GAS)でライブラリを公開しました。ライブラリを開発する際、テストのフィードバックサイクルを短くするため、`Clasp + Typescript + Jest` という技術スタックを選択しました。その開発体験について共有しようと思います。特段変わったことはしていません。</description>
      <pubDate>Sat, 01 Feb 2020 00:00:00 GMT</pubDate>
      <category>Google Apps Script</category>
      <category>Test</category>
      <category>Clasp</category>
      <category>Typescript</category>
      <category>Jest</category>
    </item>
    <item>
      <title>ユニットテストを書く上で守りたいこと</title>
      <link>https://silverbirder.github.io/blog/contents/things_to_keep_in_writing_unit_tests/</link>
      <description>背景 普段、業務でユニットテストを書いたり、レビューをしたりしています。ユニットテストがあることは良いことなのですが、困ったことがあります。それは、ユニットテストのルールが明確じゃない点です。そのため、人によって、ユニットテストの書き方がマチマチで、なんとかしたいなと困っています。</description>
      <pubDate>Sun, 12 Jan 2020 00:00:00 GMT</pubDate>
      <category>Unit Test</category>
      <category>Test</category>
    </item>
    <item>
      <title>IntelliJ + TypeScript + Docker で Remote Debug (Break Point)</title>
      <link>https://silverbirder.github.io/blog/contents/intelliJ_typescript_docker_remote_debug/</link>
      <description>Dockerコンテナ上で、 `ts-node-dev --inspect=0.0.0.0:9229 ./dist/index.js` を実行</description>
      <pubDate>Sat, 28 Dec 2019 00:00:00 GMT</pubDate>
      <category>IntelliJ</category>
      <category>Typescript</category>
      <category>Docker</category>
      <category>Remote Debug</category>
      <category>Scrap</category>
    </item>
    <item>
      <title>NFC Automation Trigger + SESAME API による自動解錠と考察</title>
      <link>https://silverbirder.github.io/blog/contents/nfc_automation_trigger_sesame_api/</link>
      <description>まえおき これからiOSを前提として話を進めていきますが、話の主題としてはiOSかどうかはあまり関係ありません。 NFC Automation Trigger 13.1のiOSリリース によりNFC Automation Triggerが使えるようになりました。NFCとは、Wikiによると次のようなものです。</description>
      <pubDate>Sat, 28 Dec 2019 00:00:00 GMT</pubDate>
      <category>NFC</category>
      <category>SESAME</category>
      <category>IoT</category>
      <category>Life Hack</category>
    </item>
    <item>
      <title>GDG DevFest Tokyo 2019に参加したら、Webの未来にワクワクした</title>
      <link>https://silverbirder.github.io/blog/contents/gdg_devfest_tokyo_2019_web/</link>
      <description>GDG DevFest Tokyo 2019というイベントに参加してきました。最近はプライベートの都合上、中々時間が取れていませんでした。しかし今回、会社の都合上、良い感じに時間を確保できたため、こちらのイベントに参加してきました。`大阪→東京` でわざわざ新幹線を使ってまで参加しましたが、それに見合う発見が多くありました。今回、私が学んだ内容について、報告しようかなと思います。</description>
      <pubDate>Mon, 16 Dec 2019 00:00:00 GMT</pubDate>
      <category>Report</category>
      <category>GDG</category>
      <category>Dev Fest</category>
      <category>Tokyo</category>
      <category>Web</category>
    </item>
    <item>
      <title>CircleCI + BackstopJS (Puppeteer) でビジュアルリグレッションテストを継続的に監視する</title>
      <link>https://silverbirder.github.io/blog/contents/circle_ci_backstop_visual_regression_testing/</link>
      <description>CircleCIとBackstopJSを組み合わせて、『継続的にWebページの視覚的な変化を監視するツール』を作成しました。</description>
      <pubDate>Fri, 15 Nov 2019 00:00:00 GMT</pubDate>
      <category>CircleCI</category>
      <category>BackstopJS</category>
      <category>Visual Regression Testing</category>
      <category>Puppeteer</category>
      <category>Test</category>
    </item>
    <item>
      <title>フィリピンに行ってきたら、日本は良いなって思うようになった</title>
      <link>https://silverbirder.github.io/blog/contents/Philippines_Travel_Notes/</link>
      <description>2019年10月11日~2019年10月15日の5日間、フィリピンに行ってきました。日本人男性(前職の先輩:Kikuchi)とフィリピン人女性が結婚するため、その結婚式旅行に同伴させて頂きました。Kikuchiさんとは、私が新人の頃に大変お世話になった方なので、お祝いの気持ちが込み上げてきました。:)</description>
      <pubDate>Sun, 27 Oct 2019 00:00:00 GMT</pubDate>
      <category>Philippines</category>
      <category>Japan</category>
      <category>Travel</category>
    </item>
    <item>
      <title>技術書典7で初執筆した経験をすべて公開</title>
      <link>https://silverbirder.github.io/blog/contents/open_the_techbook7_first_experience/</link>
      <description>技術書典7で初執筆しました。記事の目的 * 執筆でどういったことをしたのかの備忘録 * 執筆を考えている人の助けになりたい実際に販売する本は↓のものです。</description>
      <pubDate>Fri, 06 Sep 2019 00:00:00 GMT</pubDate>
      <category>Book</category>
      <category>Learn</category>
    </item>
    <item>
      <title>エンジニアのためのスマートホーム化</title>
      <link>https://silverbirder.github.io/blog/contents/smart_home_for_enginner/</link>
      <description>エンジニアの皆さん、IoT使っていますか？スマートホームに欠かせないIoT商品を使うことで、生活体験はより良くなります。この記事では、ご自宅をスマートホーム化するためのIoT商品をリストアップします。『そんなのあるの？』という気づきがあれば、幸いです。</description>
      <pubDate>Fri, 06 Sep 2019 00:00:00 GMT</pubDate>
      <category>IoT</category>
      <category>Life Hack</category>
      <category>Smart Home</category>
    </item>
    <item>
      <title>技術書典7 で「はじめてのWeb Components入門」を初出版します！</title>
      <link>https://silverbirder.github.io/blog/contents/first_release_techbook7/</link>
      <description>この度、初めて書籍を出版することになりました！「はじめてのWeb Components入門」本を技術書典7で販売します。</description>
      <pubDate>Fri, 30 Aug 2019 00:00:00 GMT</pubDate>
      <category>Web Components</category>
      <category>Book</category>
    </item>
    <item>
      <title>Cloud Native Days Tokyo 2019 -2019年7月22-23日参加レポート</title>
      <link>https://silverbirder.github.io/blog/contents/cloud_native_days_tokyo_2019/</link>
      <description>今回、東京で開催されましたCloud Native Days Tokyo 2019に2日間とも参加してきましたので、報告しようと思います。セッション毎の報告というより、全体を通した感想を話そうかなと思います。</description>
      <pubDate>Sat, 27 Jul 2019 00:00:00 GMT</pubDate>
      <category>Report</category>
      <category>Cloud Native Days</category>
      <category>Tokyo</category>
      <category>Kubernetes</category>
    </item>
    <item>
      <title>【増枠】Frontend de KANPAI! 7 - Going on 令和 - 2019年7月19日参加レポート</title>
      <link>https://silverbirder.github.io/blog/contents/frontend_de_kanpai_7/</link>
      <description>今回はDeNAさん主催のFrontendのイベントに参加してきましたので、報告しようと思います。hashtagはこちら frokan イベント概要 「Frontend de KANPAI!」（以下、FROKAN）は、フロントエンドエンジニアやフロントエンドに興味がある人が集い、ドリンク片手にゆるく交流・技術交換ができるコミュニティを目指しています。</description>
      <pubDate>Sat, 20 Jul 2019 00:00:00 GMT</pubDate>
      <category>Report</category>
      <category>Frontend</category>
      <category>Tokyo</category>
    </item>
    <item>
      <title>Roundup IT Antenna Sites</title>
      <link>https://silverbirder.github.io/blog/contents/Roundup_IT_Antenna_Sites/</link>
      <description>背景 今年の9月にPyConJP 2019が開催されます。 https://pycon.jp/2019/ LTの募集があったので、LT応募するためのネタ探しをはじめました</description>
      <pubDate>Wed, 03 Jul 2019 00:00:00 GMT</pubDate>
      <category>IT</category>
      <category>Python</category>
      <category>PyConJP</category>
    </item>
    <item>
      <title>AWS Summit Osaka 2019 2019年6月27日参加レポート</title>
      <link>https://silverbirder.github.io/blog/contents/aws_summit_osaka_2019/</link>
      <description>大阪のグランフロント大阪で開かれました「AWS Summit Osaka 2019」に参加してきましたので、私の中で良かった３つのセッションを紹介したいなと思います。</description>
      <pubDate>Sat, 29 Jun 2019 00:00:00 GMT</pubDate>
      <category>AWS</category>
      <category>Report</category>
      <category>Osaka</category>
    </item>
    <item>
      <title>【増枠】Mix Leap Study 45 - Google I/O、WWDCまとめて報告会！ 2019年6月15日参加レポート</title>
      <link>https://silverbirder.github.io/blog/contents/mix_leap_study_45/</link>
      <description>今回は、ヤフー株式会社主催の下記セミナーに参加してきました。Google/Appleどちらも大好きで、けど海外カンファレンスにいけなかった私にとって、今回の報告会は&lt;b&gt;新鮮な内容&lt;/b&gt;ばかりでした。その内容を記事に書こうと思います。</description>
      <pubDate>Thu, 27 Jun 2019 00:00:00 GMT</pubDate>
      <category>Report</category>
      <category>Mix Leap Study</category>
      <category>Google I/O</category>
      <category>WWDC</category>
      <category>Osaka</category>
    </item>
    <item>
      <title>【大阪・梅田】Kubernetes Meetup Tokyo 19 大阪サテライト- 2019年5月31日参加レポート</title>
      <link>https://silverbirder.github.io/blog/contents/kubernetes_meetup_tokyo_19_osaka_satellite/</link>
      <description>大阪からKubernetes Meetup Tokyoに参加できるとのことで、こちらに参加してきました。Kubernetesの生みの親である3人の内の1人のJoe Bedaから、Kubernetesの歴史の経緯について教えて頂きました。その話がとてもわかりやすく、なるほどなと思ったので、ぜひとも共有したいと思います。</description>
      <pubDate>Sat, 01 Jun 2019 00:00:00 GMT</pubDate>
      <category>Report</category>
      <category>Kubernetes</category>
      <category>Tokyo</category>
      <category>Osaka</category>
    </item>
    <item>
      <title>【大阪】BMXUG勉強会 -Kubernates体験＆Watson Discovery入門- 2019年3月27日参加レポート</title>
      <link>https://silverbirder.github.io/blog/contents/bmxug_kubernetes_watson_discovery/</link>
      <description>今回、k8sの体験を目的として参加したのですが、意外な収穫があったので、共有したく、記事を書くことにしました。</description>
      <pubDate>Wed, 22 May 2019 00:00:00 GMT</pubDate>
      <category>Report</category>
      <category>Osaka</category>
      <category>Kubernetes</category>
      <category>Watson Discovery</category>
      <category>Beginner</category>
      <category>BMXUG</category>
    </item>
    <item>
      <title>【大阪】GCPUG Kansai 〜 Cloud Next Extended ～ - 2019年5月14日 参加レポート</title>
      <link>https://silverbirder.github.io/blog/contents/gcpug_kansai_cloud_next_extended/</link>
      <description>こちらの参加しましたので、ご報告します。hashtagはこちらです。next19extended 目的 2019/04/09 ～ 04/11 にサンフランシスコで開催された Google Cloud Next '19 San Francisco で発表された Google Cloud の 新サービスに関する解説や振り返りの内容がメインのイベントとなります！</description>
      <pubDate>Wed, 22 May 2019 00:00:00 GMT</pubDate>
      <category>Report</category>
      <category>GCP</category>
      <category>Osaka</category>
    </item>
    <item>
      <title>Go Conference 2019 Spring - 2019年5月18日 参加レポート</title>
      <link>https://silverbirder.github.io/blog/contents/go_conference_2019_spring/</link>
      <description>https://gocon.jp こちらに参加してきましたので、ご報告します！</description>
      <pubDate>Tue, 21 May 2019 00:00:00 GMT</pubDate>
      <category>Report</category>
      <category>Go Conference</category>
      <category>Tokyo</category>
    </item>
    <item>
      <title>Algolia Community Party in 京都 - 2019年5月10日 参加レポート</title>
      <link>https://silverbirder.github.io/blog/contents/algolia_community_party_in_kyoto/</link>
      <description>Algolia Community Party in 京都 - 2019年5月10日。こちらに参加しましたので、ご報告までに記事を書こうと思います。</description>
      <pubDate>Sat, 11 May 2019 00:00:00 GMT</pubDate>
      <category>Report</category>
      <category>Algolia</category>
      <category>Kyoto</category>
    </item>
    <item>
      <title>Cloud Runをたった3ステップでデプロイしてみた (golang)</title>
      <link>https://silverbirder.github.io/blog/contents/cloud_run_3_step_glang/</link>
      <description>Cloud Run とは？ Cloud Run is a managed compute platform that enables you to run stateless containers that are invocable via HTTP requests. Cloud Run is serverless ※ https://cloud.google.com/run/ 詳しくは割愛するが、Cloud FunctionsやApp Engineと同じようなサーバーレスで動作するもの。コンテナをdeployするため、GKEから制御することもできる。</description>
      <pubDate>Thu, 11 Apr 2019 00:00:00 GMT</pubDate>
      <category>GCP</category>
      <category>Cloud Run</category>
      <category>Golang</category>
      <category>Deploy</category>
      <category>Scrap</category>
    </item>
    <item>
      <title>SESAME(セサミ) が届いたよ！</title>
      <link>https://silverbirder.github.io/blog/contents/Introduce_SESAME/</link>
      <description>「鍵どこいったっけ？」という悩みから、おさらば！</description>
      <pubDate>Mon, 08 Apr 2019 00:00:00 GMT</pubDate>
      <category>SESAME</category>
      <category>IoT</category>
      <category>Life Hack</category>
    </item>
    <item>
      <title>スマート家電のよさをしってほしい</title>
      <link>https://silverbirder.github.io/blog/contents/Good_Smart_Gadget/</link>
      <description>私が実際に使ってみて便利だと感じたオススメ商品を３つ紹介します！</description>
      <pubDate>Tue, 26 Mar 2019 00:00:00 GMT</pubDate>
      <category>IoT</category>
      <category>Life Hack</category>
    </item>
  </channel>
</rss>