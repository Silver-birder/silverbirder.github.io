import{O as t,_ as e,a as n}from"./e12801e9.js";import{c as r}from"./90f0e617.js";import"./a2a9827a.js";customElements.define("o-embed",class extends t{constructor(...t){super(...t),e(this,"proxy","https://cors-anywhere-4p3yrqnm3q-uc.a.run.app"),e(this,"provider","https://gist.githubusercontent.com/silverbirder/4575171d72cd1b0293c7de0913edb6f9/raw/oEmbedProviders.json")}}),customElements.define("ogp-me",class extends n{constructor(...t){super(...t),e(this,"proxy","https://cors-anywhere-4p3yrqnm3q-uc.a.run.app"),e(this,"width","512px")}});class a extends HTMLElement{constructor(){super(),r()}}class s extends HTMLElement{static get observedAttributes(){return["source"]}styleElements(){const t=document.createElement("style");return t.textContent="\n        .card-list {\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                padding-top: 40px;\n                --gap: 60px;\n                display: inline-flex;\n                flex-wrap: wrap;\n                margin: calc(-1 * var(--gap)) 0 0 calc(-1 * var(--gap));\n                width: calc(100% + var(--gap));\n                align-items: flex-start;\n        }\n        .card {\n                flex: 0 1 360px;\n                margin: var(--gap) 0 0 var(--gap);\n                box-shadow: 0 4px 8px 0 rgb(0 0 0 / 20%);\n                transition: 0.3s;\n        }\n        .card .thumbnail {\n                background-image: url(https://res.cloudinary.com/silverbirder/image/upload/v1611128736/silver-birder.github.io/assets/logo.png);\n                background-size: contain;\n                background-repeat: no-repeat;\n                background-position: center;\n                display: block;\n                height: 200px;\n        }\n        table {\n              text-align: left;\n        }\n        ",[t]}templateElements(){const t=document.createElement("template");t.setAttribute("id","cardList"),t.innerHTML='\n        <div class="card-list"></div>\n    '.trim();const e=document.createElement("template");return e.setAttribute("id","card"),e.innerHTML='\n        <div class="card">\n            <div class="thumbnail"></div>\n            <div class="content">\n                <h2>Title</h2>\n                <p>contents</p>\n            </div>\n        </div>\n    '.trim(),[t,e]}constructor(){super();const t=this.attachShadow({mode:"open"});this.styleElements().map((e=>t.appendChild(e))),this.templateElements().map((e=>t.appendChild(e)))}connectedCallback(){this.render()}attributeChangedCallback(t,e,n){}async fetch(t){return(await fetch(t)).json()}}customElements.define("skill-cards",class extends s{async render(){let t=this.shadowRoot.getElementById("cardList");this.shadowRoot.appendChild(t.content.cloneNode(!0));(await this.fetch(this.getAttribute("source"))).items.filter((t=>""!=t.results)).map((t=>{let e=this.shadowRoot.getElementById("card").content.cloneNode(!0);e.querySelector(".card .thumbnail").setAttribute("style",`background-image: url(${t.image});`),e.querySelector("h2").textContent=t.name,e.querySelector("p").textContent=t.results,e.querySelector("p").innerHTML=`\n      <table>\n        <thead>\n          <tr>\n            <th>経験年数</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>${t.actual_years}</td>\n          </tr>\n        </tbody>\n      </table>\n      <table>\n        <thead>\n          <tr>\n            <th>利用シーン</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${t.usage_scenarios.map((t=>`<tr><td>${t}</td></tr>`)).join("")}\n        </tbody>\n      </table>\n      <table>\n        <thead>\n          <tr>\n            <th>種別</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${t.tech_types.map((t=>`<tr><td>${t}</td></tr>`)).join("")}\n        </tbody>\n      </table>\n      <h3>所感</h3>\n      <p>${t.results}</p>\n      `,this.shadowRoot.querySelector(".card-list").appendChild(e)}))}}),customElements.define("book-cards",class extends s{async render(){let t=this.shadowRoot.getElementById("cardList");this.shadowRoot.appendChild(t.content.cloneNode(!0));(await this.fetch(this.getAttribute("source"))).map((t=>{let e=this.shadowRoot.getElementById("card").content.cloneNode(!0);e.querySelector(".card .thumbnail").setAttribute("style",`background-image: url(${t.cover});`),e.querySelector("h2").textContent=t.title;let n="";t.textContent&&t.textContent.length>0&&(n=`<h3>内容</h3><p>${t.textContent[0].Text}</p>`);const r=`\n      <table>\n        <thead>\n          <tr>\n            <th>著者</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>${t.author}</td>\n          </tr>\n        </tbody>\n      </table>\n      <table>\n        <thead>\n          <tr>\n            <th>出版社</th>\n            <th>出版日</th>\n            <th>ISBN</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>${t.publisher}</td>\n            <td>${t.pubdate}</td>\n            <td>${t.isbn}</td>\n          </tr>\n        </tbody>\n      </table>\n      `;e.querySelector("p").innerHTML=r+n,this.shadowRoot.querySelector(".card-list").appendChild(e)}))}}),customElements.define("goods-cards",class extends s{async render(){let t=this.shadowRoot.getElementById("cardList");this.shadowRoot.appendChild(t.content.cloneNode(!0));(await this.fetch(this.getAttribute("source"))).items.map((t=>{let e=this.shadowRoot.getElementById("card").content.cloneNode(!0);e.querySelector(".card .thumbnail").setAttribute("style",`background-image: url(${t.image});`),e.querySelector("h2").textContent=t.name,e.querySelector("p").innerHTML=`\n      <table>\n        <thead>\n          <tr><th>購入日</th></tr>\n        </thead>\n        <tbody>\n          <tr><td>${t.date}</td></tr>\n        </tbody>\n      </table>\n      `,this.shadowRoot.querySelector(".card-list").appendChild(e)}))}}),customElements.define("fire-confetti",a);
